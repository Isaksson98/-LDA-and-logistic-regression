data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(7,4.3,unique(iris$Species),col=1:length(iris$Species),pch=1)
legend(0,0,unique(iris$Species),col=1:length(iris$Species),pch=1)
library(datasets)
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(0,0,unique(iris$Species),col=1:length(iris$Species),pch=1)
library(datasets)
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
legend(5,5,unique(iris$Species),col=1:length(iris$Species))
,pch=1
)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
legend(10,10,unique(iris$Species),col=1:length(iris$Species),pch=1)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(10,10,unique(iris$Species),col=1:length(iris$Species),pch=1)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(7,7,unique(iris$Species),col=1:length(iris$Species),pch=1)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(5,7,unique(iris$Species),col=1:length(iris$Species),pch=1)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(8,7,unique(iris$Species),col=1:length(iris$Species),pch=1)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(8,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
library(datasets)
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
#legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
#Setosa will be easy to classify using LDA since they are clearly
#seperated. Versicolor and viginica have no clear border between
#them and LDA will be harder.
model <- lda(Species~., data = train.transformed)
# Make predictions
predictions <- model %>% predict(test.transformed)
# Model accuracy
mean(predictions$class==test.transformed$Species)
model <- lda(Species~., data = train.transformed)
model <- lda(Species~., data = train.transformed)
library(MASS) #LDA
model <- lda(Species~., data = train.transformed)
#Fit the model
model <- lda(Species~., data = iris$Sepal.Length)
#Fit the model
model <- lda(Species~., data = iris$Sepal.Length)
# Make predictions
predictions <- model %>% predict(test.transformed)
# Model accuracy
mean(predictions$class==test.transformed$Species)
model <- lda(Species~., data = iris$Sepal.Length)
# Make predictions
predictions <- model %>% predict(iris)
# Model accuracy
mean(predictions$class==iris$Species)
model <- lda(Species~., data = iris$Sepal.Length)
model <- lda(iris$Species~., data = iris$Sepal.Length)
model <- lda(iris$Species~., data = iris)
predictions <- model %>% predict(iris)
model = lda( iris$Species ~ iris$Sepal.Length + iris$Sepal.Width + iris$Petal.Length + iris$Petal.Width, iris)
predictions = predict(model, newdata=iris[,c(1,2,3,4)])$class
table(iris[,5],predictions)
model = lda( iris$Species ~ iris$Sepal.Length + iris$Sepal.Width, iris)
# Make predictions
predictions = predict(model, newdata=iris[,c(1,2,3,4)])$class
# Model accuracy
table(iris[,5],predictions)
model
cov(model)
(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
(cov(subset(iris,subset=Species=='versicolor',select=-Species)) -> S2)
(cov(subset(iris,subset=Species=='virginica',select=-Species)) -> S3)
((dof[1]*S1+dof[2]*S2+dof[3]*S3)/sum(dof) -> S)
(table(iris$Species)-1 -> dof)
((dof[1]*S1+dof[2]*S2+dof[3]*S3)/sum(dof) -> S)
model
plot(model)
library(datasets)
library(MASS) #LDA
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
#legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
#Setosa will be easy to classify using LDA since they are clearly
#seperated. Versicolor and viginica have no clear border between
#them and LDA will be harder.
#Fit the model
model = lda( iris$Species ~ iris$Sepal.Length + iris$Sepal.Width, iris)
# Make predictions
predictions = predict(model, newdata=iris[,c(1,2,3,4)])$class
# Model accuracy
table(iris[,5],predictions)
#(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
#(cov(subset(iris,subset=Species=='versicolor',select=-Species)) -> S2)
#(cov(subset(iris,subset=Species=='virginica',select=-Species)) -> S3)
#(table(iris$Species)-1 -> dof)
#((dof[1]*S1+dof[2]*S2+dof[3]*S3)/sum(dof) -> S)
plot(model)
library(datasets)
library(MASS) #LDA
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
#legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
#Setosa will be easy to classify using LDA since they are clearly
#seperated. Versicolor and viginica have no clear border between
#them and LDA will be harder.
#Fit the model
model = lda( iris$Species ~ iris$Sepal.Length + iris$Sepal.Width, iris)
# Make predictions
predictions = predict(model, newdata=iris[,c(1,2,3,4)])$class
# Model accuracy
table(iris[,5],predictions)
#(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
#(cov(subset(iris,subset=Species=='versicolor',select=-Species)) -> S2)
#(cov(subset(iris,subset=Species=='virginica',select=-Species)) -> S3)
#(table(iris$Species)-1 -> dof)
#((dof[1]*S1+dof[2]*S2+dof[3]*S3)/sum(dof) -> S)
plot(model)
decisionplot(model, x, class = "Species", main = "LDA")
np <- 300
nd.x <- seq(from = min(my.xy$x), to = max(my.xy$x), length.out = np)
nd.y <- seq(from = min(my.xy$y), to = max(my.xy$y), length.out = np)
nd <- expand.grid(x = nd.x, y = nd.y)
prd <- as.numeric(predict(mdl, newdata = nd)$class)
plot(my.xy[, 1:2], col = my.xy$group)
points(mdl$means, pch = "+", cex = 3, col = c("black", "red"))
contour(x = nd.x, y = nd.y, z = matrix(prd, nrow = np, ncol = np),
levels = c(1, 2), add = TRUE, drawlabels = FALSE)
partimat(Species ~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data=train, method="lda")
model
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
iris$Sepal.Length
mean(iris$Sepal.Length)
model
mean(iris$Sepal.Length[iris$Species==n])
mean(iris$Sepal.Length[iris$Species==1])
mean(iris$Sepal.Length[iris$Species==0])
mean(iris$Sepal.Length[iris$Species==2])
mean(iris$Sepal.Length[iris$Species=='setosa'])
mean_1 = mean(iris$Sepal.Length[iris$Species=='setosa'])
mean_2 = mean(iris$Sepal.Length[iris$Species=='versicolor'])
mean_3 = mean(iris$Sepal.Length[iris$Species=='virginica'])
mean1
mean_1
mean_2
mean_3
model
len(iris$Species=='setosa')
length(iris$Species=='setosa')
iris$Species=='virginica'
iris$Species=='virginica'.length
iris$Species.length
iris$Species.Length
iris$Species=='virginica'.length
iris$Species=='versicolor'
length(iris$Species=='setosa' == True)
iris$Sepal.Width[iris$Species=='setosa']
length(iris$Sepal.Width[iris$Species=='setosa'])
length(iris$Species[iris$Species=='setosa'])
pi_1 = length(iris$Species[iris$Species=='setosa']) / length(iris$Species)
pi_2 = length(iris$Species[iris$Species=='setosa'])/ length(iris$Species)
pi_3 = length(iris$Species[iris$Species=='setosa'])/ length(iris$Species)
pi_1
ppi_1pi_3
pi_3
cov(iris$Sepal.Length, iris$Sepal.Width)
cov(iris$Sepal.Length, iris$Sepal.Width)
cov(iris$Species=='versicolor',iris$Species=='setosa')
cov(iris$Sepal.Length, iris$Sepal.Width)
s1
(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
s1
S1
summary(iris)
disc1 = x* mean1_len*S1-1/2*mean1_len*S1*mean1_len + log(pi_1)
x = iris
disc1 = x* mean1_len*S1-1/2*mean1_len*S1*mean1_len + log(pi_1)
mean1_len = mean(iris$Sepal.Length[iris$Species=='setosa'])
mean2_len = mean(iris$Sepal.Length[iris$Species=='versicolor'])
mean3_len = mean(iris$Sepal.Length[iris$Species=='virginica'])
mean1_wid = mean(iris$Sepal.Width[iris$Species=='setosa'])
mean2_wid = mean(iris$Sepal.Width[iris$Species=='versicolor'])
mean3_wid = mean(iris$Sepal.Width[iris$Species=='virginica'])
pi_1 = length(iris$Species[iris$Species=='setosa']) / length(iris$Species)
pi_2 = length(iris$Species[iris$Species=='versicolor'])/ length(iris$Species)
pi_3 = length(iris$Species[iris$Species=='virginica'])/ length(iris$Species)
#Covariance matricies
(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
(cov(subset(iris,subset=Species=='versicolor',select=-Species)) -> S2)
(cov(subset(iris,subset=Species=='virginica',select=-Species)) -> S3)
x = iris
di
disc1 = x* mean1_len*S1-1/2*mean1_len*S1*mean1_len + log(pi_1)
disc1 = x* mean1_len*S1-(1/2)*mean1_len*S1*mean1_len + log(pi_1)
disc1 = x* mean1_len*S1-(1/2).*mean1_len*S1*mean1_len + log(pi_1)
disc1 = x*mean1_len*S1 - (1/2).*mean1_len*S1*mean1_len + log(pi_1)
disc1 = x*mean1_len*S1 - (1/2)*mean1_len*S1*mean1_len + log(pi_1)
disc1 = x*mean1_len*S1 - mean1_len*S1*mean1_len + log(pi_1)
disc1 = x*mean1_len*S1 - mean1_len*S1*mean1_len + log(pi_1)
x*mean1_len*S1
x
x = iris$Sepal.Length
disc1 = x*mean1_len*S1 - (1/2)*mean1_len*S1*mean1_len + log(pi_1)
x = iris$Sepal.Length
disc1 = x*mean1_len*S1 - (1/2)*mean1_len*S1*mean1_len + log(pi_1)
x = iris$Sepal.Length
disc
disc1 = t(x)*mean1_len*S1 - (1/2)*t(mean1_len)*S1*mean1_len + log(pi_1)
dim(x)
iris$Sepal.Length
x = iris$Sepal.Length
disc1 = t(x)*mean1_len*S1 - (1/2)*t(mean1_len)*S1*mean1_len + log(pi_1)
dim(x)
dim(mean1_len)
NROW(x);NCOL(x)
NROW(mean1_len);NCOL(mean1_len)
NROW(S1);NCOL(S1)
s1
S1
S1[1,1]
disc1 = t(x)*mean1_len*S1[1,1] - (1/2)*t(mean1_len)*S1[1,1]*mean1_len + log(pi_1)
t(x)*mean1_len*S1[1,1]
NROW(pi_1);NCOL(pi_1)
NROW(mean1_len);NCOL(mean1_len)
disc1 = t(x)*mean1_len*S1[1,1] - (1/2)*t(mean1_len)*S1[1,1]*mean1_len + log(pi_1)
(1/2)*t(mean1_len)*S1[1,1]*mean1_len + log(pi_1)
t(x)*mean1_len*S1[1,1]
x = iris$Sepal.Length
w1 = t(x)*mean1_len*S1[1,1]
w2 = (1/2)*t(mean1_len)*S1[1,1]*mean1_len + log(pi_1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
disc1 = w1-w2
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
w2
disc1 = w1 - w2[1,1]
disc1
NROW(mean3_len);NCOL(mean3_len)
v <- c(mean1_len, mean1_wid)
v
library(datasets)
library(MASS) #LDA
data(iris)
summary(iris)
plot(iris$Sepal.Length, iris$Sepal.Width,col = iris$Species, main="Iris Data")
#legend(5,5,unique(iris$Species),col=1:length(iris$Species),pch=1)
#Setosa will be easy to classify using LDA since they are clearly
#seperated. Versicolor and viginica have no clear border between
#them and LDA will be harder.
mean1_len = mean(iris$Sepal.Length[iris$Species=='setosa'])
mean2_len = mean(iris$Sepal.Length[iris$Species=='versicolor'])
mean3_len = mean(iris$Sepal.Length[iris$Species=='virginica'])
mean1_wid = mean(iris$Sepal.Width[iris$Species=='setosa'])
mean2_wid = mean(iris$Sepal.Width[iris$Species=='versicolor'])
mean3_wid = mean(iris$Sepal.Width[iris$Species=='virginica'])
mean1 <- c(mean1_len, mean1_wid)
mean2 <- c(mean2_len, mean2_wid)
mean3 <- c(mean3_len, mean3_wid)
pi_1 = length(iris$Species[iris$Species=='setosa']) / length(iris$Species)
pi_2 = length(iris$Species[iris$Species=='versicolor'])/ length(iris$Species)
pi_3 = length(iris$Species[iris$Species=='virginica'])/ length(iris$Species)
#Covariance matricies
(cov(subset(iris,subset=Species=='setosa',select=-Species)) -> S1)
(cov(subset(iris,subset=Species=='versicolor',select=-Species)) -> S2)
(cov(subset(iris,subset=Species=='virginica',select=-Species)) -> S3)
x = iris$Sepal.Length
w1 = t(x)*mean1*S1[1,1]
w2 = (1/2)*t(mean1)*S1[1,1]*mean1 + log(pi_1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
disc1 = w1 - w2[1,1]
S1
S1[1:2,1:2]
x = iris$Sepal.Length
w1 = t(x)*mean1*S1[1:2,1:2]
w2 = (1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
disc1 = w1 - w2[1,1]
w1 = t(x)*mean1*S1[1:2,1:2]
w2 = (1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(x);NCOL(x)
NROW(mean1);NCOL(mean1)
mean1*S1[1:2,1:2]
mean1*S1[1:2,1:2]
S1[1:2,1:2]
w1 = mean1*S1[1:2,1:2]
w2 = (1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
disc1 = t(x)*w1 - w2[1,1]
x = iris$Sepal.Length
w1 = t(mean1)*S1[1:2,1:2]
w2 = (1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
disc1 = t(x)*w1 - w2[1,1]
mean1
t(mean1)*S1[1:2,1:2]
(mean1)*S1[1:2,1:2]
S1[1:2,1:2]*(mean1)
S1[1:2,1:2]*t(mean1)
mean
mean1
(mean1)*S1[1:2,1:2]
S1[1:2,1:2]
S1[2:3,2:3]
mean1 <- t(c(mean1_len, mean1_wid))
mean2 <- t(c(mean2_len, mean2_wid))
mean3 <- t(c(mean3_len, mean3_wid))
mean1
w1 = S1[1:2,1:2]*mean1
NROW(mean1);NCOL(mean1)
NROW(t(mean1));NCOL(t(mean1))
mean1 <- c(mean1_len, mean1_wid)
mean2 <- c(mean2_len, mean2_wid)
mean3 <- c(mean3_len, mean3_wid)
NROW(mean1);NCOL(mean1)
w1 = S1[1:2,1:2]*mean1
w1
NROW(S1[1:2,1:2]);NCOL(S1[1:2,1:2])
w1 = S1[1:2,1:2]  %*% mean1
w1
x = iris$Sepal.Length
w1 = S1[1:2,1:2]  %*% mean1
w2 = (-1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(S1[1:2,1:2]);NCOL(S1[1:2,1:2])
NROW(w2);NCOL(w2)
disc1 = t(x)*w1 + w2[1,1]
w1 = S1[1:2,1:2]  %*% mean1
w2 = (-1/2)*t(mean1)*S1[1:2,1:2]*mean1 + log(pi_1)
NROW(S1[1:2,1:2]);NCOL(S1[1:2,1:2])
NROW(w2);NCOL(w2)
disc1 = t(x)%*%w1 + w2[1,1]
NROW(x);NCOL(x)
NROW(w1);NCOL(w1)
disc1 = t(x)%*% t(w1) + w2[1,1]
NROW(w1);NCOL(w1)
disc1 = x%*% t(w1) + w2[1,1]
NROW(disc1);NCOL(disc1)
mean1
NROW(mean1);NCOL(mean1)
w1 = S1[1:2,1:2]  %*% mean1
w2 = (-1/2)*t(mean1)%*%S1[1:2,1:2]*mean1 + log(pi_1)
disc1 = x%*% t(w1) + w2[1,1]
NROW(disc1);NCOL(disc1)
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
w2 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
NROW(w2);NCOL(w2)
w2
disc1 = x%*% t(w1) + w2[1,1]
NROW(disc1);NCOL(disc1)
disc1 = t(x)%*% w1 + w2
NROW(disc1);NCOL(disc1)
NROW(w2);NCOL(w2)
NROW(w1);NCOL(w1)
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
NROW(w1);NCOL(w1)
NROW(w2);NCOL(w2)
NROW(disc1);NCOL(disc1)
NROW(w2);NCOL(w2)
disc1 = t(x)%*% w2 + w1
S1
w2 = 1/S1[1:2,1:2]  %*% mean1
NROW(w2);NCOL(w2)
w2 = S1[1:2,1:2]  %*% mean1
NROW(x);NCOL(x)
x = c(iris$Sepal.Length, iris$Sepal.Width)
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
NROW(disc1);NCOL(disc1)
NROW(x);NCOL(x)
disc1 = t(x)%*% w2 + w1
x = matrix(c(iris$Sepal.Length,iris$Sepal.Width),nrow=length(iris$Sepal.Length))
NROW(x);NCOL(x)
x = matrix(c(iris$Sepal.Length,iris$Sepal.Width),nrow=length(iris$Sepal.Length))
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
NROW(x);NCOL(x)
disc1 = t(x)%*% w2 + w1
NROW(disc1);NCOL(disc1)
x = matrix(c(iris$Sepal.Length,iris$Sepal.Width),nrow=length(iris$Sepal.Length))
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
NROW(x);NCOL(x)
disc1 = t(x)%*% w2 + w1
NROW(disc1);NCOL(disc1)
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
matrix(c(iris$Sepal.Length,iris$Sepal.Width),nrow=length(V1))
x = matrix(c(iris$Sepal.Length,iris$Sepal.Width),nrow=length(iris$Sepal.Length))
w1 = (-1/2)*t(mean1)%*%S1[1:2,1:2]%*%mean1 + log(pi_1)
w2 = S1[1:2,1:2]  %*% mean1
NROW(x);NCOL(x)
disc1 = t(x)%*% w2 + w1
disc1 = x%*% w2 + w1
disc1 = x%*% w2 + w1
NROW(x);NCOL(x)
NROW(w2);NCOL(w2)
x%*% w2
disc1 = x%*% w2 + w1
w1
NROW(x);NCOL(x)
NROW(w2);NCOL(w2)
disc1 = x%*% w2 #+ w1
NROW(disc1);NCOL(disc1)
disc1 = (x%*% w2) + w1
disc1 = (x%*% w2) + w1[1,1]
NROW(disc1);NCOL(disc1)
pi
dimen =function(x){
return (NROW(x),NCOL(x))
}
dimen(w2)
dimen =function(x){
NROW(x);NCOL(x)
}
dimen(w2)
disc1 = discriminant(x, mean_1, S1, pi_1)
discriminant =function(x,mean, S, pi_){
w1 = (-1/2)*t(mean)%*%S[1:2,1:2]%*%mean + log(pi_)
w2 = S1[1:2,1:2]  %*% mean1
disc = (x%*% w2) + w1[1,1]
return (disc)
}
disc1 = discriminant(x, mean_1, S1, pi_1)
disc1 = discriminant(x, mean1, S1, pi_1)
dimen(disc1)
NROW(disc1)
dimen =function(x){
NROW(x)
NCOL(x)
}
dimen(disc1)
NROW(disc1)
dimen =function(x_){
NROW(x_)
NCOL(x_)
}
NROW(disc1)
NCOL(disc1)
dimen =function(x_){
print(NROW(x_))
print(NCOL(x_))
}
NCOL(disc1)
dimen(disc1)
disc1 = discriminant(x, mean1, S1, pi_1)
dimen(disc1)
disc2 = discriminant(x, mean2, S2, pi_2)
dimen(disc2)
disc3 = discriminant(x, mean3, S3, pi_3)
dimen(disc1)
N1 = length(iris$Species[iris$Species=='setosa'])
N2 = length(iris$Species[iris$Species=='versicolor'])
N3 = length(iris$Species[iris$Species=='virginica'])
pi_1 = N1 / length(iris$Species)
pi_2 = N2 / length(iris$Species)
pi_3 = N3 / length(iris$Species)
N1
N2
N3
sum(N1,N2, N3)
overall_cov = S1*N1 + S2*N2 + S3*N3/sum(N1,N2, N3)
overall_cov
overall_cov = (S1*N1 + S2*N2 + S3*N3)/sum(N1,N2, N3)
overall_cov
softMax(disc1)
SoftMax(disc1)
SoftMax(disc1)
SoftMax(4)
softmax =function(x){
num1 = exp(x)
num2 = sum(x)
return (num1/num2)
}
softmax(disc1)
summary(SoftMax(iris[["Petal.Length"]]))
summary(SoftMax(iris[["Petal.Length"]]))
softmax =function(x){
num1 = exp(x)
num2 = sum(exp(x))
return (num1/num2)
}
softmax =function(x){
num1 = exp(x)
num2 = sum(exp(x))
return (num1/num2)
}
a1 = softmax(disc1)
a1
sum(a1)
model = lda( iris$Species ~ iris$Sepal.Length + iris$Sepal.Width, iris)
# Make predictions
predictions = predict(model, newdata=iris[,c(1,2,3,4)])$class
# Model accuracy
table(iris[,5],predictions)
